###############################################dataset###############################
# This properties file contains the filter configurations                    #
##############################################################################


# A filter uses a backend service to retrieve the entity types
# as default we use dbpedia live
org.aksw.gerbil.util.filter.service=http://dbpedia.org/sparql
# all annotator results and gold standards are cached
org.aksw.gerbil.util.filter.cache=true;
# pre cache gold standard if not already cached
org.aksw.gerbil.util.filter.precache=true;
org.aksw.gerbil.util.filter.cachelocation=${org.aksw.gerbil.DataPath}/cache/filter

# To shorten the type definitions we use the sparql prefix set
org.aksw.gerbil.util.filter.prefix.1=dbpedia-owl:<http://dbpedia.org/ontology/>
org.aksw.gerbil.util.filter.prefix.2=type:<http://dbpedia.org/class/yago/>
org.aksw.gerbil.util.filter.prefix.3=foaf:<http://xmlns.com/foaf/0.1/>

# A filter consists of a name and a partial sparql query ?v is the result identifier
# like ?v rdf:type foaf:person . } , as you see this is only the sparql body
# we set the head for you
org.aksw.gerbil.util.filter.1.name=filter persons
org.aksw.gerbil.util.filter.1.filter=v? values?v rdf:type foaf:Person . }
org.aksw.gerbil.util.filter.2.name=filter persons
org.aksw.gerbil.util.filter.2.filter=?v rdf:type foaf:Agent . }
